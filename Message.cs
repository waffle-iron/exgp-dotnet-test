// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ExGP.Messages {

  /// <summary>Holder for reflection information generated from message.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class MessageReflection {

    #region Descriptor
    /// <summary>File descriptor for message.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1tZXNzYWdlLnByb3RvEg1FeEdQLk1lc3NhZ2VzGhNjb21tb24vaGVhZGVy",
            "LnByb3RvGhJjb21tb24vcm91dGUucHJvdG8aGGNvbW1vbi90cmFuc2FjdGlv",
            "bi5wcm90bxoPYXV0aC9hdXRoLnByb3RvGhdpbnRlcm5hbC9pbnRlcm5hbC5w",
            "cm90bxobY29ubmVjdGlvbi9jb25uZWN0aW9uLnByb3RvIsICCghFbnZlbG9w",
            "ZRIlCgZoZWFkZXIYASABKAsyFS5FeEdQLk1lc3NhZ2VzLkhlYWRlchIjCgVy",
            "b3V0ZRgCIAEoCzIULkV4R1AuTWVzc2FnZXMuUm91dGUSLwoLdHJhbnNhY3Rp",
            "b24YAyABKAsyGi5FeEdQLk1lc3NhZ2VzLlRyYW5zYWN0aW9uEjIKDGF1dGhf",
            "cGF5bG9hZBgEIAEoCzIaLkV4R1AuTWVzc2FnZXMuQXV0aFBheWxvYWRIABI6",
            "ChBpbnRlcm5hbF9wYXlsb2FkGAUgASgLMh4uRXhHUC5NZXNzYWdlcy5JbnRl",
            "cm5hbFBheWxvYWRIABI+ChJjb25uZWN0aW9uX3BheWxvYWQYBiABKAsyIC5F",
            "eEdQLk1lc3NhZ2VzLkNvbm5lY3Rpb25QYXlsb2FkSABCCQoHcGF5bG9hZGIG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::ExGP.Messages.HeaderReflection.Descriptor, global::ExGP.Messages.RouteReflection.Descriptor, global::ExGP.Messages.TransactionReflection.Descriptor, global::ExGP.Messages.AuthReflection.Descriptor, global::ExGP.Messages.InternalReflection.Descriptor, global::ExGP.Messages.ConnectionReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ExGP.Messages.Envelope), global::ExGP.Messages.Envelope.Parser, new[]{ "Header", "Route", "Transaction", "AuthPayload", "InternalPayload", "ConnectionPayload" }, new[]{ "Payload" }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Envelope : pb::IMessage<Envelope> {
    private static readonly pb::MessageParser<Envelope> _parser = new pb::MessageParser<Envelope>(() => new Envelope());
    public static pb::MessageParser<Envelope> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::ExGP.Messages.MessageReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public Envelope() {
      OnConstruction();
    }

    partial void OnConstruction();

    public Envelope(Envelope other) : this() {
      Header = other.header_ != null ? other.Header.Clone() : null;
      Route = other.route_ != null ? other.Route.Clone() : null;
      Transaction = other.transaction_ != null ? other.Transaction.Clone() : null;
      switch (other.PayloadCase) {
        case PayloadOneofCase.AuthPayload:
          AuthPayload = other.AuthPayload.Clone();
          break;
        case PayloadOneofCase.InternalPayload:
          InternalPayload = other.InternalPayload.Clone();
          break;
        case PayloadOneofCase.ConnectionPayload:
          ConnectionPayload = other.ConnectionPayload.Clone();
          break;
      }

    }

    public Envelope Clone() {
      return new Envelope(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::ExGP.Messages.Header header_;
    public global::ExGP.Messages.Header Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "route" field.</summary>
    public const int RouteFieldNumber = 2;
    private global::ExGP.Messages.Route route_;
    public global::ExGP.Messages.Route Route {
      get { return route_; }
      set {
        route_ = value;
      }
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 3;
    private global::ExGP.Messages.Transaction transaction_;
    public global::ExGP.Messages.Transaction Transaction {
      get { return transaction_; }
      set {
        transaction_ = value;
      }
    }

    /// <summary>Field number for the "auth_payload" field.</summary>
    public const int AuthPayloadFieldNumber = 4;
    public global::ExGP.Messages.AuthPayload AuthPayload {
      get { return payloadCase_ == PayloadOneofCase.AuthPayload ? (global::ExGP.Messages.AuthPayload) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.AuthPayload;
      }
    }

    /// <summary>Field number for the "internal_payload" field.</summary>
    public const int InternalPayloadFieldNumber = 5;
    public global::ExGP.Messages.InternalPayload InternalPayload {
      get { return payloadCase_ == PayloadOneofCase.InternalPayload ? (global::ExGP.Messages.InternalPayload) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.InternalPayload;
      }
    }

    /// <summary>Field number for the "connection_payload" field.</summary>
    public const int ConnectionPayloadFieldNumber = 6;
    public global::ExGP.Messages.ConnectionPayload ConnectionPayload {
      get { return payloadCase_ == PayloadOneofCase.ConnectionPayload ? (global::ExGP.Messages.ConnectionPayload) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.ConnectionPayload;
      }
    }

    private object payload_;
    /// <summary>Enum of possible cases for the "payload" oneof.</summary>
    public enum PayloadOneofCase {
      None = 0,
      AuthPayload = 4,
      InternalPayload = 5,
      ConnectionPayload = 6,
    }
    private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
    public PayloadOneofCase PayloadCase {
      get { return payloadCase_; }
    }

    public void ClearPayload() {
      payloadCase_ = PayloadOneofCase.None;
      payload_ = null;
    }

    public override bool Equals(object other) {
      return Equals(other as Envelope);
    }

    public bool Equals(Envelope other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (!object.Equals(Route, other.Route)) return false;
      if (!object.Equals(Transaction, other.Transaction)) return false;
      if (!object.Equals(AuthPayload, other.AuthPayload)) return false;
      if (!object.Equals(InternalPayload, other.InternalPayload)) return false;
      if (!object.Equals(ConnectionPayload, other.ConnectionPayload)) return false;
      if (PayloadCase != other.PayloadCase) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (route_ != null) hash ^= Route.GetHashCode();
      if (transaction_ != null) hash ^= Transaction.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.AuthPayload) hash ^= AuthPayload.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.InternalPayload) hash ^= InternalPayload.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.ConnectionPayload) hash ^= ConnectionPayload.GetHashCode();
      hash ^= (int) payloadCase_;
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (route_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Route);
      }
      if (transaction_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Transaction);
      }
      if (payloadCase_ == PayloadOneofCase.AuthPayload) {
        output.WriteRawTag(34);
        output.WriteMessage(AuthPayload);
      }
      if (payloadCase_ == PayloadOneofCase.InternalPayload) {
        output.WriteRawTag(42);
        output.WriteMessage(InternalPayload);
      }
      if (payloadCase_ == PayloadOneofCase.ConnectionPayload) {
        output.WriteRawTag(50);
        output.WriteMessage(ConnectionPayload);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (route_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Route);
      }
      if (transaction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transaction);
      }
      if (payloadCase_ == PayloadOneofCase.AuthPayload) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AuthPayload);
      }
      if (payloadCase_ == PayloadOneofCase.InternalPayload) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InternalPayload);
      }
      if (payloadCase_ == PayloadOneofCase.ConnectionPayload) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConnectionPayload);
      }
      return size;
    }

    public void MergeFrom(Envelope other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          header_ = new global::ExGP.Messages.Header();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.route_ != null) {
        if (route_ == null) {
          route_ = new global::ExGP.Messages.Route();
        }
        Route.MergeFrom(other.Route);
      }
      if (other.transaction_ != null) {
        if (transaction_ == null) {
          transaction_ = new global::ExGP.Messages.Transaction();
        }
        Transaction.MergeFrom(other.Transaction);
      }
      switch (other.PayloadCase) {
        case PayloadOneofCase.AuthPayload:
          AuthPayload = other.AuthPayload;
          break;
        case PayloadOneofCase.InternalPayload:
          InternalPayload = other.InternalPayload;
          break;
        case PayloadOneofCase.ConnectionPayload:
          ConnectionPayload = other.ConnectionPayload;
          break;
      }

    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (header_ == null) {
              header_ = new global::ExGP.Messages.Header();
            }
            input.ReadMessage(header_);
            break;
          }
          case 18: {
            if (route_ == null) {
              route_ = new global::ExGP.Messages.Route();
            }
            input.ReadMessage(route_);
            break;
          }
          case 26: {
            if (transaction_ == null) {
              transaction_ = new global::ExGP.Messages.Transaction();
            }
            input.ReadMessage(transaction_);
            break;
          }
          case 34: {
            global::ExGP.Messages.AuthPayload subBuilder = new global::ExGP.Messages.AuthPayload();
            if (payloadCase_ == PayloadOneofCase.AuthPayload) {
              subBuilder.MergeFrom(AuthPayload);
            }
            input.ReadMessage(subBuilder);
            AuthPayload = subBuilder;
            break;
          }
          case 42: {
            global::ExGP.Messages.InternalPayload subBuilder = new global::ExGP.Messages.InternalPayload();
            if (payloadCase_ == PayloadOneofCase.InternalPayload) {
              subBuilder.MergeFrom(InternalPayload);
            }
            input.ReadMessage(subBuilder);
            InternalPayload = subBuilder;
            break;
          }
          case 50: {
            global::ExGP.Messages.ConnectionPayload subBuilder = new global::ExGP.Messages.ConnectionPayload();
            if (payloadCase_ == PayloadOneofCase.ConnectionPayload) {
              subBuilder.MergeFrom(ConnectionPayload);
            }
            input.ReadMessage(subBuilder);
            ConnectionPayload = subBuilder;
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
