// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: auth/reconnect.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ExGP.Messages {

  /// <summary>Holder for reflection information generated from auth/reconnect.proto</summary>
  public static partial class ReconnectReflection {

    #region Descriptor
    /// <summary>File descriptor for auth/reconnect.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ReconnectReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRhdXRoL3JlY29ubmVjdC5wcm90bxINRXhHUC5NZXNzYWdlcyJDChBSZWNv",
            "bm5lY3RSZXF1ZXN0Eg0KBWVtYWlsGAEgASgJEgsKA2dpZBgCIAEoCRITCgtz",
            "ZXNzaW9uX2tleRgDIAEoCSLXAQoRUmVjb25uZWN0UmVzcG9uc2USDwoHc3Vj",
            "Y2VzcxgBIAEoCBJDCgplcnJvcl9jb2RlGAIgASgOMi8uRXhHUC5NZXNzYWdl",
            "cy5SZWNvbm5lY3RSZXNwb25zZS5SZWNvbm5lY3RFcnJvchITCgtzZXNzaW9u",
            "X2tleRgDIAEoCSJXCg5SZWNvbm5lY3RFcnJvchISCg5MT0dJTl9SRVFVSVJF",
            "RBAAEhcKE0lOVkFMSURfU0VTU0lPTl9LRVkQARIYChRJTlZBTElEX0VNQUlM",
            "X09SX0dJRBACYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ExGP.Messages.ReconnectRequest), global::ExGP.Messages.ReconnectRequest.Parser, new[]{ "Email", "Gid", "SessionKey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ExGP.Messages.ReconnectResponse), global::ExGP.Messages.ReconnectResponse.Parser, new[]{ "Success", "ErrorCode", "SessionKey" }, null, new[]{ typeof(global::ExGP.Messages.ReconnectResponse.Types.ReconnectError) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ReconnectRequest : pb::IMessage<ReconnectRequest> {
    private static readonly pb::MessageParser<ReconnectRequest> _parser = new pb::MessageParser<ReconnectRequest>(() => new ReconnectRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReconnectRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ExGP.Messages.ReconnectReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReconnectRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReconnectRequest(ReconnectRequest other) : this() {
      email_ = other.email_;
      gid_ = other.gid_;
      sessionKey_ = other.sessionKey_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReconnectRequest Clone() {
      return new ReconnectRequest(this);
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 1;
    private string email_ = "";
    /// <summary>
    ///  Only one of [GID/email] need to be set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gid" field.</summary>
    public const int GidFieldNumber = 2;
    private string gid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gid {
      get { return gid_; }
      set {
        gid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "session_key" field.</summary>
    public const int SessionKeyFieldNumber = 3;
    private string sessionKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionKey {
      get { return sessionKey_; }
      set {
        sessionKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReconnectRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReconnectRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Email != other.Email) return false;
      if (Gid != other.Gid) return false;
      if (SessionKey != other.SessionKey) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (Gid.Length != 0) hash ^= Gid.GetHashCode();
      if (SessionKey.Length != 0) hash ^= SessionKey.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Email.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Email);
      }
      if (Gid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Gid);
      }
      if (SessionKey.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SessionKey);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (Gid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gid);
      }
      if (SessionKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionKey);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReconnectRequest other) {
      if (other == null) {
        return;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.Gid.Length != 0) {
        Gid = other.Gid;
      }
      if (other.SessionKey.Length != 0) {
        SessionKey = other.SessionKey;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Email = input.ReadString();
            break;
          }
          case 18: {
            Gid = input.ReadString();
            break;
          }
          case 26: {
            SessionKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReconnectResponse : pb::IMessage<ReconnectResponse> {
    private static readonly pb::MessageParser<ReconnectResponse> _parser = new pb::MessageParser<ReconnectResponse>(() => new ReconnectResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReconnectResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ExGP.Messages.ReconnectReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReconnectResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReconnectResponse(ReconnectResponse other) : this() {
      success_ = other.success_;
      errorCode_ = other.errorCode_;
      sessionKey_ = other.sessionKey_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReconnectResponse Clone() {
      return new ReconnectResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "error_code" field.</summary>
    public const int ErrorCodeFieldNumber = 2;
    private global::ExGP.Messages.ReconnectResponse.Types.ReconnectError errorCode_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ExGP.Messages.ReconnectResponse.Types.ReconnectError ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    /// <summary>Field number for the "session_key" field.</summary>
    public const int SessionKeyFieldNumber = 3;
    private string sessionKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionKey {
      get { return sessionKey_; }
      set {
        sessionKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReconnectResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReconnectResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (ErrorCode != other.ErrorCode) return false;
      if (SessionKey != other.SessionKey) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (ErrorCode != 0) hash ^= ErrorCode.GetHashCode();
      if (SessionKey.Length != 0) hash ^= SessionKey.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (ErrorCode != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ErrorCode);
      }
      if (SessionKey.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SessionKey);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (ErrorCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ErrorCode);
      }
      if (SessionKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionKey);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReconnectResponse other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.ErrorCode != 0) {
        ErrorCode = other.ErrorCode;
      }
      if (other.SessionKey.Length != 0) {
        SessionKey = other.SessionKey;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 16: {
            errorCode_ = (global::ExGP.Messages.ReconnectResponse.Types.ReconnectError) input.ReadEnum();
            break;
          }
          case 26: {
            SessionKey = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ReconnectResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ReconnectError {
        /// <summary>
        ///  Indicates the session key in the DB is null so the account wasn't connected.
        /// </summary>
        [pbr::OriginalName("LOGIN_REQUIRED")] LoginRequired = 0,
        /// <summary>
        ///  Indicates the session key provided was wrong.
        /// </summary>
        [pbr::OriginalName("INVALID_SESSION_KEY")] InvalidSessionKey = 1,
        /// <summary>
        ///  Indicates the email or GID didn't match an existing account.
        /// </summary>
        [pbr::OriginalName("INVALID_EMAIL_OR_GID")] InvalidEmailOrGid = 2,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
