// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: auth/auth.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ExGP.Messages {

  /// <summary>Holder for reflection information generated from auth/auth.proto</summary>
  public static partial class AuthReflection {

    #region Descriptor
    /// <summary>File descriptor for auth/auth.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AuthReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9hdXRoL2F1dGgucHJvdG8SDUV4R1AuTWVzc2FnZXMaEGF1dGgvbG9naW4u",
            "cHJvdG8aE2F1dGgvcmVnaXN0ZXIucHJvdG8aFGF1dGgvcmVjb25uZWN0LnBy",
            "b3RvIv4CCgtBdXRoUGF5bG9hZBI0Cg1sb2dpbl9yZXF1ZXN0GAEgASgLMhsu",
            "RXhHUC5NZXNzYWdlcy5Mb2dpblJlcXVlc3RIABI2Cg5sb2dpbl9yZXNwb25z",
            "ZRgCIAEoCzIcLkV4R1AuTWVzc2FnZXMuTG9naW5SZXNwb25zZUgAEjoKEHJl",
            "Z2lzdGVyX3JlcXVlc3QYAyABKAsyHi5FeEdQLk1lc3NhZ2VzLlJlZ2lzdGVy",
            "UmVxdWVzdEgAEjwKEXJlZ2lzdGVyX3Jlc3BvbnNlGAQgASgLMh8uRXhHUC5N",
            "ZXNzYWdlcy5SZWdpc3RlclJlc3BvbnNlSAASPAoRcmVjb25uZWN0X3JlcXVl",
            "c3QYBSABKAsyHy5FeEdQLk1lc3NhZ2VzLlJlY29ubmVjdFJlcXVlc3RIABI+",
            "ChJyZWNvbm5lY3RfcmVzcG9uc2UYBiABKAsyIC5FeEdQLk1lc3NhZ2VzLlJl",
            "Y29ubmVjdFJlc3BvbnNlSABCCQoHY29udGVudGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::ExGP.Messages.LoginReflection.Descriptor, global::ExGP.Messages.RegisterReflection.Descriptor, global::ExGP.Messages.ReconnectReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ExGP.Messages.AuthPayload), global::ExGP.Messages.AuthPayload.Parser, new[]{ "LoginRequest", "LoginResponse", "RegisterRequest", "RegisterResponse", "ReconnectRequest", "ReconnectResponse" }, new[]{ "Content" }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AuthPayload : pb::IMessage<AuthPayload> {
    private static readonly pb::MessageParser<AuthPayload> _parser = new pb::MessageParser<AuthPayload>(() => new AuthPayload());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AuthPayload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ExGP.Messages.AuthReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthPayload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthPayload(AuthPayload other) : this() {
      switch (other.ContentCase) {
        case ContentOneofCase.LoginRequest:
          LoginRequest = other.LoginRequest.Clone();
          break;
        case ContentOneofCase.LoginResponse:
          LoginResponse = other.LoginResponse.Clone();
          break;
        case ContentOneofCase.RegisterRequest:
          RegisterRequest = other.RegisterRequest.Clone();
          break;
        case ContentOneofCase.RegisterResponse:
          RegisterResponse = other.RegisterResponse.Clone();
          break;
        case ContentOneofCase.ReconnectRequest:
          ReconnectRequest = other.ReconnectRequest.Clone();
          break;
        case ContentOneofCase.ReconnectResponse:
          ReconnectResponse = other.ReconnectResponse.Clone();
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthPayload Clone() {
      return new AuthPayload(this);
    }

    /// <summary>Field number for the "login_request" field.</summary>
    public const int LoginRequestFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ExGP.Messages.LoginRequest LoginRequest {
      get { return contentCase_ == ContentOneofCase.LoginRequest ? (global::ExGP.Messages.LoginRequest) content_ : null; }
      set {
        content_ = value;
        contentCase_ = value == null ? ContentOneofCase.None : ContentOneofCase.LoginRequest;
      }
    }

    /// <summary>Field number for the "login_response" field.</summary>
    public const int LoginResponseFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ExGP.Messages.LoginResponse LoginResponse {
      get { return contentCase_ == ContentOneofCase.LoginResponse ? (global::ExGP.Messages.LoginResponse) content_ : null; }
      set {
        content_ = value;
        contentCase_ = value == null ? ContentOneofCase.None : ContentOneofCase.LoginResponse;
      }
    }

    /// <summary>Field number for the "register_request" field.</summary>
    public const int RegisterRequestFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ExGP.Messages.RegisterRequest RegisterRequest {
      get { return contentCase_ == ContentOneofCase.RegisterRequest ? (global::ExGP.Messages.RegisterRequest) content_ : null; }
      set {
        content_ = value;
        contentCase_ = value == null ? ContentOneofCase.None : ContentOneofCase.RegisterRequest;
      }
    }

    /// <summary>Field number for the "register_response" field.</summary>
    public const int RegisterResponseFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ExGP.Messages.RegisterResponse RegisterResponse {
      get { return contentCase_ == ContentOneofCase.RegisterResponse ? (global::ExGP.Messages.RegisterResponse) content_ : null; }
      set {
        content_ = value;
        contentCase_ = value == null ? ContentOneofCase.None : ContentOneofCase.RegisterResponse;
      }
    }

    /// <summary>Field number for the "reconnect_request" field.</summary>
    public const int ReconnectRequestFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ExGP.Messages.ReconnectRequest ReconnectRequest {
      get { return contentCase_ == ContentOneofCase.ReconnectRequest ? (global::ExGP.Messages.ReconnectRequest) content_ : null; }
      set {
        content_ = value;
        contentCase_ = value == null ? ContentOneofCase.None : ContentOneofCase.ReconnectRequest;
      }
    }

    /// <summary>Field number for the "reconnect_response" field.</summary>
    public const int ReconnectResponseFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ExGP.Messages.ReconnectResponse ReconnectResponse {
      get { return contentCase_ == ContentOneofCase.ReconnectResponse ? (global::ExGP.Messages.ReconnectResponse) content_ : null; }
      set {
        content_ = value;
        contentCase_ = value == null ? ContentOneofCase.None : ContentOneofCase.ReconnectResponse;
      }
    }

    private object content_;
    /// <summary>Enum of possible cases for the "content" oneof.</summary>
    public enum ContentOneofCase {
      None = 0,
      LoginRequest = 1,
      LoginResponse = 2,
      RegisterRequest = 3,
      RegisterResponse = 4,
      ReconnectRequest = 5,
      ReconnectResponse = 6,
    }
    private ContentOneofCase contentCase_ = ContentOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentOneofCase ContentCase {
      get { return contentCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContent() {
      contentCase_ = ContentOneofCase.None;
      content_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AuthPayload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AuthPayload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LoginRequest, other.LoginRequest)) return false;
      if (!object.Equals(LoginResponse, other.LoginResponse)) return false;
      if (!object.Equals(RegisterRequest, other.RegisterRequest)) return false;
      if (!object.Equals(RegisterResponse, other.RegisterResponse)) return false;
      if (!object.Equals(ReconnectRequest, other.ReconnectRequest)) return false;
      if (!object.Equals(ReconnectResponse, other.ReconnectResponse)) return false;
      if (ContentCase != other.ContentCase) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (contentCase_ == ContentOneofCase.LoginRequest) hash ^= LoginRequest.GetHashCode();
      if (contentCase_ == ContentOneofCase.LoginResponse) hash ^= LoginResponse.GetHashCode();
      if (contentCase_ == ContentOneofCase.RegisterRequest) hash ^= RegisterRequest.GetHashCode();
      if (contentCase_ == ContentOneofCase.RegisterResponse) hash ^= RegisterResponse.GetHashCode();
      if (contentCase_ == ContentOneofCase.ReconnectRequest) hash ^= ReconnectRequest.GetHashCode();
      if (contentCase_ == ContentOneofCase.ReconnectResponse) hash ^= ReconnectResponse.GetHashCode();
      hash ^= (int) contentCase_;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (contentCase_ == ContentOneofCase.LoginRequest) {
        output.WriteRawTag(10);
        output.WriteMessage(LoginRequest);
      }
      if (contentCase_ == ContentOneofCase.LoginResponse) {
        output.WriteRawTag(18);
        output.WriteMessage(LoginResponse);
      }
      if (contentCase_ == ContentOneofCase.RegisterRequest) {
        output.WriteRawTag(26);
        output.WriteMessage(RegisterRequest);
      }
      if (contentCase_ == ContentOneofCase.RegisterResponse) {
        output.WriteRawTag(34);
        output.WriteMessage(RegisterResponse);
      }
      if (contentCase_ == ContentOneofCase.ReconnectRequest) {
        output.WriteRawTag(42);
        output.WriteMessage(ReconnectRequest);
      }
      if (contentCase_ == ContentOneofCase.ReconnectResponse) {
        output.WriteRawTag(50);
        output.WriteMessage(ReconnectResponse);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (contentCase_ == ContentOneofCase.LoginRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LoginRequest);
      }
      if (contentCase_ == ContentOneofCase.LoginResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LoginResponse);
      }
      if (contentCase_ == ContentOneofCase.RegisterRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegisterRequest);
      }
      if (contentCase_ == ContentOneofCase.RegisterResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegisterResponse);
      }
      if (contentCase_ == ContentOneofCase.ReconnectRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReconnectRequest);
      }
      if (contentCase_ == ContentOneofCase.ReconnectResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReconnectResponse);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AuthPayload other) {
      if (other == null) {
        return;
      }
      switch (other.ContentCase) {
        case ContentOneofCase.LoginRequest:
          LoginRequest = other.LoginRequest;
          break;
        case ContentOneofCase.LoginResponse:
          LoginResponse = other.LoginResponse;
          break;
        case ContentOneofCase.RegisterRequest:
          RegisterRequest = other.RegisterRequest;
          break;
        case ContentOneofCase.RegisterResponse:
          RegisterResponse = other.RegisterResponse;
          break;
        case ContentOneofCase.ReconnectRequest:
          ReconnectRequest = other.ReconnectRequest;
          break;
        case ContentOneofCase.ReconnectResponse:
          ReconnectResponse = other.ReconnectResponse;
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            global::ExGP.Messages.LoginRequest subBuilder = new global::ExGP.Messages.LoginRequest();
            if (contentCase_ == ContentOneofCase.LoginRequest) {
              subBuilder.MergeFrom(LoginRequest);
            }
            input.ReadMessage(subBuilder);
            LoginRequest = subBuilder;
            break;
          }
          case 18: {
            global::ExGP.Messages.LoginResponse subBuilder = new global::ExGP.Messages.LoginResponse();
            if (contentCase_ == ContentOneofCase.LoginResponse) {
              subBuilder.MergeFrom(LoginResponse);
            }
            input.ReadMessage(subBuilder);
            LoginResponse = subBuilder;
            break;
          }
          case 26: {
            global::ExGP.Messages.RegisterRequest subBuilder = new global::ExGP.Messages.RegisterRequest();
            if (contentCase_ == ContentOneofCase.RegisterRequest) {
              subBuilder.MergeFrom(RegisterRequest);
            }
            input.ReadMessage(subBuilder);
            RegisterRequest = subBuilder;
            break;
          }
          case 34: {
            global::ExGP.Messages.RegisterResponse subBuilder = new global::ExGP.Messages.RegisterResponse();
            if (contentCase_ == ContentOneofCase.RegisterResponse) {
              subBuilder.MergeFrom(RegisterResponse);
            }
            input.ReadMessage(subBuilder);
            RegisterResponse = subBuilder;
            break;
          }
          case 42: {
            global::ExGP.Messages.ReconnectRequest subBuilder = new global::ExGP.Messages.ReconnectRequest();
            if (contentCase_ == ContentOneofCase.ReconnectRequest) {
              subBuilder.MergeFrom(ReconnectRequest);
            }
            input.ReadMessage(subBuilder);
            ReconnectRequest = subBuilder;
            break;
          }
          case 50: {
            global::ExGP.Messages.ReconnectResponse subBuilder = new global::ExGP.Messages.ReconnectResponse();
            if (contentCase_ == ContentOneofCase.ReconnectResponse) {
              subBuilder.MergeFrom(ReconnectResponse);
            }
            input.ReadMessage(subBuilder);
            ReconnectResponse = subBuilder;
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
